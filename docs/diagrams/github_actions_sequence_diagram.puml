@startuml github_actions_sequence_diagram

actor Bob

participant "Awesome Project Actions\n **workflow**" as AwesomeWorkflow

participant "Metrics Integration Actions\n **workflow**" as IntegrationsWorkflow
participant "CI Integrations" as CiIntegrations

database "Firestore Database" as Firestore


Bob -> AwesomeWorkflow : Push commit to master
activate AwesomeWorkflow

activate AwesomeWorkflow
AwesomeWorkflow -> AwesomeWorkflow : Start build job
activate AwesomeWorkflow #DarkSalmon


opt coverage export configured
    AwesomeWorkflow -> AwesomeWorkflow : Convert coverage to CI Integrations format
    AwesomeWorkflow -> AwesomeWorkflow : Export coverage artifact
end
deactivate AwesomeWorkflow

AwesomeWorkflow -[hidden]> IntegrationsWorkflow

opt other jobs configured
AwesomeWorkflow -> AwesomeWorkflow : Start other job (ex: publish build)
activate AwesomeWorkflow #DarkSalmon

deactivate AwesomeWorkflow
end

AwesomeWorkflow -[hidden]> IntegrationsWorkflow
AwesomeWorkflow -> AwesomeWorkflow : Run notify about finishing project job
activate AwesomeWorkflow #DarkSalmon

AwesomeWorkflow -> IntegrationsWorkflow : Notify about finishing Awesome project workflow
activate IntegrationsWorkflow

AwesomeWorkflow --> Bob : Workflow run finished
deactivate AwesomeWorkflow
deactivate AwesomeWorkflow
deactivate AwesomeWorkflow

IntegrationsWorkflow -> IntegrationsWorkflow : Run sync job
activate IntegrationsWorkflow #DarkSalmon

IntegrationsWorkflow -> IntegrationsWorkflow : Wait until Awesome Project Actions Workflow got finished
IntegrationsWorkflow -> CiIntegrations : Run sync command
activate CiIntegrations

CiIntegrations <-> Firestore : Sync build data
return Sync command finished

IntegrationsWorkflow --> Bob : Sync finished
deactivate IntegrationsWorkflow
deactivate IntegrationsWorkflow

@enduml
