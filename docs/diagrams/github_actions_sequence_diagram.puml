@startuml github_actions_sequence_diagram

actor Bob

participant "Awesome Project Actions\n **workflow**" as AwesomeWorkflow
participant "Notify about building \nthe Awesome project\n **job**" as NotifyBuilding

participant "Metrics Integration Actions\n **workflow**" as IntegrationsWorkflow
participant "Awesome project build data sync\n **job**" as AwesomeSync
participant "CI Integrations" as CiIntegrations

database "Firestore Database" as Firestore


Bob -> AwesomeWorkflow : Push commit to master
activate AwesomeWorkflow
AwesomeWorkflow -> AwesomeWorkflow : Perform build

opt coverage export configured
    AwesomeWorkflow -> AwesomeWorkflow : Convert coverage to CI Integrations format
    AwesomeWorkflow -> AwesomeWorkflow : Export coverage artifact
end

AwesomeWorkflow -> NotifyBuilding : Run notify about building project
activate NotifyBuilding

NotifyBuilding -> IntegrationsWorkflow : Notify about Awesome project is building
activate IntegrationsWorkflow

IntegrationsWorkflow -> AwesomeSync : Run sync job
activate AwesomeSync

NotifyBuilding --> AwesomeWorkflow : Notification sent
deactivate NotifyBuilding

AwesomeWorkflow --> Bob : Workflow run finished
deactivate AwesomeWorkflow

AwesomeSync -> AwesomeSync : Wait until Awesome Project Actions Workflow got finished

AwesomeSync -> CiIntegrations : Run sync command
activate CiIntegrations

CiIntegrations -> Firestore : Sync build data
return Sync command finished
AwesomeSync --> IntegrationsWorkflow : Sync finished
IntegrationsWorkflow --> Bob : Sync finished

@enduml
