@startuml coverage_sequence_diagram


actor Bob


participant CoverageConverterRunner
participant CoverageArgumentsParser
participant SpecificCoverageConverterCommand
participant SpecificCoverageConverter


Bob -> CoverageConverterRunner : coverage_converter specific -i input.json -o output.json

activate CoverageConverterRunner
CoverageConverterRunner -> CoverageArgumentsParser : parse(arguments)
activate CoverageArgumentsParser

alt inputFile == null
activate CoverageArgumentsParser

return throw ArgumentError
activate CoverageConverterRunner
CoverageConverterRunner -> Bob: prints error message
deactivate CoverageConverterRunner

end 

return CoverageArguments instance
CoverageConverterRunner -> SpecificCoverageConverterCommand : run()
activate SpecificCoverageConverterCommand

alt !inputFile.exists
activate SpecificCoverageConverterCommand

return throw an CoverageConverterException
activate CoverageConverterRunner

CoverageConverterRunner -> Bob : prints error message
deactivate CoverageConverterRunner

end

SpecificCoverageConverterCommand -> SpecificCoverageConverter : convert(inputFile)
activate SpecificCoverageConverter
return CoverageData instance
SpecificCoverageConverterCommand -> SpecificCoverageConverterCommand : write Coverage as a json to output file
return 
return

@enduml
