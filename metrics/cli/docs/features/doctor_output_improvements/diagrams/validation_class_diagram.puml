@startuml validation_output_class_diagram

package validation.lib.src {
    package model {
        package builder {
            class ValidationResultBuilder {
                - _results: Map<ValidationTarget, TargetValidationResult>

                + setResult(result: TargetValidationResult): void
                + setEmptyResults(result: TargetValidationResult): void
                + build(): ValidationResult
            }
        }

        class ValidationTarget {
            + name: String
            + description: String
        }

        class ValidationConclusion {
            + name: String
            + indicator: String
        }

        class TargetValidationResult<T> {
            + data: T
            + target: ValidationTarget
            + conclusion: ValidationConclusion
            + description: String
            + details: Map<String, dynamic>
            + context: Map<String, dynamic>

            + copyWith(): TargetValidationResult
        }

        class ValidationResult{
            + results: UnmodifiableMapView<ValidationTarget, TargetValidationResult>
        }
    }

    package printer {
        class ValidationResultPrinter{
            - _sink: StringSink

            + print(result: ValidationResult): void
        }
    }
}

TargetValidationResult --> ValidationTarget : uses
TargetValidationResult --> ValidationConclusion : uses

ValidationResult --> TargetValidationResult : uses
ValidationResult --> ValidationTarget : uses

ValidationResultBuilder -up-> ValidationResult : builds
ValidationResultBuilder --> ValidationTarget : uses
ValidationResultBuilder -up-> TargetValidationResult : uses

ValidationResultPrinter --> ValidationConclusion : uses
ValidationResultPrinter --> ValidationTarget : uses
ValidationResultPrinter --> ValidationResult : prints

@enduml
