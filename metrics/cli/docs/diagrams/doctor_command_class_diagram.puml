@startuml doctor_command_class_diagram

package cli {
    interface BaseCli {
        + version() : Future<void>
    }

    class FlutterCli {
        + version(): Future<void>
        + enableWeb(): Future<void>
        + buildWeb(String workingDir): Future<void>
    }

    class GitCli {
        + clone(String repoURL, String srcPath): Future<void>
        + version(): Future<void>
    }

    class FirebaseCli {
         + login(): Future<void>
         + addFirebase(String projectId, String firebaseToken): Future<void>
         + selectFirebaseWebApp(String projectId, String firebaseToken): Future<void>
         + createWebApp(String projectId, String firebaseToken): Future<void>
         + initFirebaseProject(String projectId, String workingDir, String firebaseToken): Future<void>
         + clearTarget(String workingDir, String firebaseToken): Future<void>
         + applyTarget(String projectId, String workingDir, String firebaseToken): Future<void>
         + deployHosting(String workingDir, String firebaseToken): Future<void>
         + deployFirestore(String workingDir, String firebaseToken): Future<void>
         + deployFunctions(String workingDir, String firebaseToken): Future<void>
         + version(): Future<void>
    }

    class GcloudCli {
        + login(): Future<void>
        + addProject(): Future<String>
        + selectProject(): Future<String>
        + setProject(): Future<void>
        + selectRegion(): Future<String>
        + addProjectApp(String region, String projectId): Future<void>
        + createDatabase(String region, String projectId): Future<void>
        + version() : Future<void>
    }

    class NpmCli {
        + install(String workingDir): Future<void>
        + version(): Future<void>
    }
}

class DoctorCommand {
 - doctorService : DoctorService
 + run() : Future<void>
}

interface DoctorService {
    + version() : Future<void>
}

class DoctorCliService {
    - firebaseCli : FirebaseCli
    - gcloudCli : GcloudCli
    - flutterCli : FlutterCli
    - gitCli : GitCli
    - npmCli : NpmCli
    + version() : Future<void>
}

DoctorCommand --> DoctorService : uses
DoctorCliService .up.|> DoctorService
FirebaseCli ..|> BaseCli
GcloudCli ..|> BaseCli
FlutterCli ..|> BaseCli
NpmCli ..|> BaseCli
GitCli ..|> BaseCli
DoctorCliService --> FirebaseCli : uses
DoctorCliService --> GcloudCli : uses
DoctorCliService --> FlutterCli : uses
DoctorCliService --> NpmCli : uses
DoctorCliService --> GitCli : uses
@enduml
