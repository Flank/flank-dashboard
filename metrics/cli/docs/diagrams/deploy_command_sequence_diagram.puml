@startuml deploy_command_sequence_diagram

scale 1900 height

skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor Bob

box Deploy Command
participant CLI
participant DeployCommand
participant DeployCliService
participant FirebaseCli
participant FlutterCli
participant GCloudCli
participant GitCli
participant NpmCli
end box

participant gcloud
participant firebase
participant git
participant flutter
participant npm
participant FileHelper

Bob -> CLI ++ : run deploy command
CLI -> DeployCommand ++ : run()
DeployCommand -> DeployCliService ++ : initGcloudCli()
DeployCliService -> GCloudCli ++ : login()
GCloudCli -> gcloud ++ : login to the google cloud
gcloud --> Bob -- : starts interactive login
GCloudCli --

Bob -> gcloud ++ : signs in
gcloud --> DeployCliService -- : login finished

DeployCliService --> Bob : asks to create new project

alt Agree to create a new project
    Bob -> DeployCliService : Y
    DeployCliService -> GCloudCli ++ : addProject()
    GCloudCli -> gcloud ++ : create a new google cloud project
    gcloud --> DeployCliService -- : project has been created
    GCloudCli --

else Do not agree to create a new project
    Bob -> DeployCliService : N
    DeployCliService -> GCloudCli ++ : selectProject()
    GCloudCli -> gcloud ++ : request a list of gcloud projects
    GCloudCli --
    gcloud --> Bob -- : shows all available projects
    DeployCliService --> Bob : asks to enter the project id
    Bob -> DeployCliService : enters the project id
end

DeployCliService -> GCloudCli ++ : setProject()
GCloudCli -> gcloud ++ : set gcloud config to point to a new project
GCloudCli --
gcloud --> DeployCliService -- : project has been set

DeployCliService -> GCloudCli ++ : selectRegion()
GCloudCli --> gcloud ++ : request a list of regions
GCloudCli --
gcloud --> Bob -- : shows all available regions
DeployCliService --> Bob : asks to enter the regionId
Bob -> DeployCliService : enters the regionId

DeployCliService --> Bob : asks to add a project app

alt Agree to add the project app
    Bob -> DeployCliService : Y
    DeployCliService -> GCloudCli ++ : addProjectApp(region, projectID)
    GCloudCli -> gcloud ++ : create project app
    gcloud --> DeployCliService -- : project app has been created
    GCloudCli --
else Do not agree to add the project app
    Bob -> DeployCliService : N
    DeployCliService --> DeployCliService: skipped
end


DeployCliService --> Bob : asks to add a project database

alt Agree to add the project database
    Bob -> DeployCliService : Y
    DeployCliService -> GCloudCli ++ : createDatabase(region, projectID)
    GCloudCli -> gcloud ++ : enable firestore API
    return firestore API has been enabled
    GCloudCli -> gcloud ++ : create a database
    gcloud --> DeployCliService -- : database has been created
    GCloudCli --
else Do not agree to add the project database
    Bob -> DeployCliService : N
    DeployCliService --> DeployCliService: skipped
end
DeployCliService --> DeployCommand -- : gcloud project has been initialized

DeployCommand -> DeployCliService ++ : initFirebaseProject()
DeployCliService -> FirebaseCli ++ : login()
FirebaseCli -> firebase ++ : login to the firebase
firebase --> Bob -- : starts interactive login
FirebaseCli --

Bob -> firebase ++ : signs in
firebase --> Bob -- : firebase token
Bob -> DeployCliService : enters firebase token

DeployCliService --> Bob : asks to add a firebase capabilities

alt Agree to add the firebase capabilities
    Bob -> DeployCliService : Y
    DeployCliService -> FirebaseCli ++ : addFirebase(projectID, firebaseToken)
    FirebaseCli -> firebase ++ : add firebase capabilities to the cloud project
    firebase --> DeployCliService -- : firebase capabilities has been added
    FirebaseCli --
else Do not agree to add the firebase capabilities
    Bob -> DeployCliService : N
    DeployCliService --> DeployCliService : skipped
end

DeployCliService --> Bob -- : asks to add a web app

alt Agree to add the web app
    Bob -> DeployCliService ++ : Y
    DeployCliService -> FirebaseCli ++ : createWebApp(projectID, firebaseToken)
    FirebaseCli -> firebase ++ : create web app
    FirebaseCli --
    firebase --> DeployCliService -- : web app has been created
else Do not agree to add the web app
    Bob -> DeployCliService : N
    DeployCliService --> DeployCliService: skipped
end

DeployCliService --> DeployCommand -- : gcloud project has been initialized

DeployCommand -> DeployCliService ++ : clone()
DeployCliService -> GitCli ++ : clone(repoURL, tempDir)
GitCli -> git ++ : clone the source project
git --> DeployCommand -- : project has been cloned
GitCli --
DeployCliService --

DeployCommand -> DeployCliService ++ : build()
DeployCliService -> FlutterCli ++ : enableWeb()
FlutterCli -> flutter ++ : enable web support
FlutterCli --
flutter --> DeployCliService -- : web support has been enabled
DeployCliService -> FlutterCli ++ : buildWeb(webPath)
FlutterCli -> flutter ++ : build the source project
flutter --> DeployCliService -- : flutter web app has been built
FlutterCli --
DeployCliService --

DeployCommand -> DeployCliService ++ : deploy()
DeployCliService -> FirebaseCli ++ : initFirebaseProject(projectId, webPath, firebaseToken)
FirebaseCli -> firebase ++ : choose the firebase project
firebase --> DeployCliService -- : project has been chosen
FirebaseCli --

DeployCliService -> FirebaseCli ++ : clearTarget(webPath, firebaseToken)
FirebaseCli -> firebase ++ : clear the firebase target
firebase --> DeployCliService -- : firebase target has been cleared
FirebaseCli --

DeployCliService -> FirebaseCli ++ : applyTarget(projectId, webPath, firebaseToken)
FirebaseCli -> firebase ++ : apply the firebase target
firebase --> DeployCliService -- : firebase target has been applied
FirebaseCli --

DeployCliService --> Bob : firebase analytics warning
Bob -> DeployCliService : enters any key

DeployCliService -> FirebaseCli ++ : deployHosting(webPath, firebaseToken)
FirebaseCli -> firebase ++ : deploy the web application to the hosting
firebase --> DeployCliService -- : application has been deployed
FirebaseCli --

DeployCliService -> FirebaseCli ++ : initFirebaseProject(projectId, firebasePath, firebaseToken)
FirebaseCli -> firebase ++ : choose the firebase project
firebase --> DeployCliService -- : project has been chosen
FirebaseCli --

DeployCliService -> NpmCli ++ : install(firebasePath)
NpmCli -> npm ++ : install npm dependencies into the firebase folder
npm --> DeployCliService -- : dependencies have been installed
NpmCli --

DeployCliService -> FirebaseCli ++ : deployFirestore(firebasePath, firebaseToken)
FirebaseCli -> firebase ++ : deploy the firestore settings to firebase
firebase --> DeployCliService -- : firestore settings have been deployed
FirebaseCli --

DeployCliService --> Bob : asks to enable a Blaze billing account for functions deployment

alt Agree to enable the Blaze billing account
    Bob -> DeployCliService : Y

    DeployCliService -> NpmCli ++ : install(firebaseFunctionsPath)
    NpmCli -> npm ++ : install npm dependencies into the functions folder
    npm --> DeployCliService -- : dependencies have been installed
    NpmCli --

    DeployCliService -> FirebaseCli ++ : deployFunctions(firebasePath, firebaseToken)
    FirebaseCli -> firebase ++ : deploy the functions to firebase
    firebase --> DeployCliService -- : functions have been deployed
    FirebaseCli --
else Do not agree to enable the Blaze billing account
    Bob -> DeployCommand : N
    DeployCliService --> DeployCliService : skipped
end

DeployCliService -> FileHelper ++: deleteDirectory(directory)
FileHelper --> DeployCliService --: directory has been cleaned up
DeployCliService --> DeployCommand --: deploy finished
DeployCommand --> CLI --: deploy finished
CLI --> Bob -- : terminate
CLI --

@enduml
