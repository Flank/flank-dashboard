@startuml cli_interfaces_class_diagram

package services {
    package cool as services.cool {
        interface CoolService{
            + coolMethod() : void
        }

        package adapter {
            class CoolCliServiceAdapter implements CoolService {
                - _coolCli : CoolCli
            }
       }

        package cli {
            class CoolCli {
                + coolCommand() : void
                + awesomeCommand() : void
            }
        }
    }
}


package common {
    package interface as common.interface {
        interface Cli {
            + executable: String
            + version() : Future<void>
            + run(List<String> arguments, {bool attachOutput, String workingDirectory, Stream<List<int>> stdin}) : Future<ProcessResult>
        }

        interface InfoService {
            + version() : void
        }
    }
}

CoolCliServiceAdapter -down-> CoolCli : uses

CoolService --|> InfoService
CoolCli ..|> Cli

@enduml
