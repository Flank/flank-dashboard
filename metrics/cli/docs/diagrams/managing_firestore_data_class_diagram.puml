@startuml firestore_managing_data_class_diagram

package deploy {
    class Deployer {
        - _fileHelper: FileHelper
        - _npmService : NpmService
        - _gitService : GitService
        - _flutterService : FlutterService
        - _gcloudService : GCloudService
        - _firebaseService : FirebaseService
        + deploy() : Future<void>
    }
}

package firebase {
    package service as firebase.service {
        interface FirebaseService {
            + login(): Future<String>
            + addProject(String gcloudProjectId): Future<void>
            + initAdminFirestore(String projectId, String servicePath) : Future<void>
            + seedFirestoreData() : Future<void>
            + deployHosting(String appPath): Future<void>
            + deployFirestore(String firestorePath): Future<void>
        }
    }

    package adapter as firebase.adapter {
        class FirebaseServiceAdapter {
            - _firebaseCli: FirebaseCli
            - _firestoreConfigRepository: FirestoreConfigRepository
            - _ prompter: Prompter
        }
    }

    package repository as firebase.repository {
        class FirestoreConfigRepository {
            - _firestore : Firestore
            + addAllowedDomain(String domain) : Future<void>
            + setFeatureConfig(bool isPasswordSignInOptionEnabled, bool isDebugMenuEnabled): Future<void>
        }
    }
}

package core {
    package data.model {
        class FeatureConfigData {
            + Map<String, dynamic> toJson()
            + factory fromJson(Map<String, dynamic> json)
        }
    }

    package domain.entities {
        class FeatureConfig {
            + isPasswordSignInOptionEnabled : bool
            + isDebugMenuEnabled : bool
        }
    }
}

package dartbase_admin {}

package gcloud {
    interface GCloudService {
        + login() : Future<void>
        + createProject() : Future<String>
        + downloadServiceKey(String path, String serviceEmail) : Future<void>
        + deactivateServiceKey(String path) : Future<void>
    }
}

Deployer --> FirebaseServiceAdapter : uses
Deployer --> GCloudService : uses

FeatureConfigData --|> FeatureConfig

FirebaseServiceAdapter ..|> FirebaseService
FirebaseServiceAdapter --> FirestoreConfigRepository : uses
FirebaseServiceAdapter -up-> dartbase_admin : uses

FirestoreConfigRepository -up-> dartbase_admin : uses
FirestoreConfigRepository --> FeatureConfigData : uses

@enduml
