@startuml codecov_class_diagram

package arguments {
    package model {
        class CodeCovArguments {
            inputFileName : String
            outputFileName : String
        }
    }

    package parser {
        class CodeCovArgumentsParser {
            CodeCovArguments parse()
        }
    }
}

package common {
    package command {
        abstract CodeCovConverterCommand {
            arguments : CodeCovArguments
            {abstract} converter : CodeCovConverter
            {abstract} name: String
            {abstract} description: String
            void run()
        }
    }

    package converter {
        interface CodeCovConverter {
            {abstract} CoverageModel convert(File)
        }
    }


    package runner {
        class CodeCovConverterRunner {
            argParser : CodeCovArgumentsParser
        }
    }
}

package specific_format {
    package converter as specific_format.converter {
        class SpecificFormatCovConverter {
            CoverageModel convert(File)
        }
    }

    package command as specific_format.command {
        class SpecificFormatCovConverterCommand {
            converter : SpecificFormatCovConverter
            name: String
            description: String
        }
    }
}


CodeCovConverterRunner -left-> SpecificFormatCovConverterCommand : uses
CodeCovConverterRunner --> CodeCovArgumentsParser : uses

SpecificFormatCovConverterCommand --> SpecificFormatCovConverter : uses
SpecificFormatCovConverterCommand --|> CodeCovConverterCommand

SpecificFormatCovConverter ..|> CodeCovConverter

CodeCovConverterCommand --> CodeCovArguments : uses


@enduml