@startuml remote_config_domain_layer_class_diagram

package base.domain.usecases {
    interface UseCase<Type, Params> {
        call: Type
    }
}

package common.domain {
    package repository {
        interface RemoteConfigurationRepository {
            + void setDefaults(isLoginFormEnabled, isFpsMonitorEnabled, isRendererDisplayEnabled);
            + Future<void> fetch();
            + Future<void> activate();
            + RemoteConfiguration getConfiguration();
        }
    }

    package entities {
        class RemoteConfiguration {
            + isLoginFormEnabled: bool
            + isFpsMonitorEnabled: bool
            + isRendererDisplayEnabled: bool
        }
    }

    package usecases {
        class FetchRemoteConfigurationUseCase {
            + Future<RemoteConfiguration> call()
        }

        class SetDefaultRemoteConfigurationUseCase {
            + void call(RemoteConfigurationParam params);
        }

        package parameters {
            class RemoteConfigurationParam {
                + isLoginFormEnabled : bool;
                + isFpsMonitorEnabled : bool;
                + isRendererDisplayEnabled : bool;
            }
        }

    }
}

FetchRemoteConfigurationUseCase ..|> UseCase
SetDefaultRemoteConfigurationUseCase ..|> UseCase

FetchRemoteConfigurationUseCase -up-> RemoteConfigurationRepository : uses
SetDefaultRemoteConfigurationUseCase -up-> RemoteConfigurationRepository : uses

RemoteConfigurationRepository --> RemoteConfiguration: uses

SetDefaultRemoteConfigurationUseCase --> RemoteConfigurationParam : uses

@enduml
