@startuml metadata_presentation_class_diagram

package core.src.util {
    class ApplicationMetadata {
        + version() : String
    }
}

package common.presentation.widgets {
    class ApplicationUnavailableScaffold {
        + build(BuildContext context) : Widget
    }
}

package core.domain.entities {
    class StorageMetadata {
        + version : String
        + isUpdating : bool
    }
}

package metadata {
    package domain.usecases {
        class ReceiveStorageMetadataUpdates {
            + call() : Stream<StorageMetadata>
        }
    }

    package presentation {
        package state {
            class MetadataNotifier {
                - receiveStorageMetadataUpdates : ReceiveStorageMetadataUpdates
                - applicationMetadata : ApplicationMetadata
                + isStorageSupported : bool
                + isStorageUpdating : bool
                + isInitialized : bool
            }
        }

        package pages {
            class ApplicationUpdatingPage {
                + build(BuildContext context) : Widget
            }
            class ApplicationIsOutdatedPage {
                + build(BuildContext context) : Widget
            }
        }

        package strings {
            class MetadataStrings {
                + {static} applicationIsOutdated : String
                + {static} storageUpdating : String
            }
        }
    }
}

MetadataNotifier --> ApplicationMetadata : uses
MetadataNotifier --> ReceiveStorageMetadataUpdates : uses
MetadataNotifier -up-> StorageMetadata : uses

ApplicationUpdatingPage --> MetadataStrings : uses
ApplicationIsOutdatedPage --> MetadataStrings : uses

ApplicationUpdatingPage -up-> ApplicationUnavailableScaffold : uses
ApplicationIsOutdatedPage -up-> ApplicationUnavailableScaffold : uses

@enduml
