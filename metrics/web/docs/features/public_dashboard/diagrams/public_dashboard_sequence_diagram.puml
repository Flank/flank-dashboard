@startuml public_dashboard_sequence_diagram

skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor Bob

participant Browser
participant LoadingPage
participant AuthNotifier
participant FeatureConfigNotifier
participant NavigationNotifier
participant CoolPage
participant DashboardPage

Bob -> Browser ++:  opens a "Cool Page" URL
Browser -> LoadingPage ++: navigates to initialize all components
LoadingPage --> Browser: returns the LoadingPage UI
Browser --> Bob: sees the LoadingPage UI

LoadingPage -> AuthNotifier ++: addListener(_authNotifierListener)
AuthNotifier --
LoadingPage -> AuthNotifier ++: subscribeToAuthenticationUpdates()
AuthNotifier --
LoadingPage -> FeatureConfigNotifier ++: addListener(_featureConfigNotifierListener)
FeatureConfigNotifier --
LoadingPage -> FeatureConfigNotifier ++: initializeConfig()
FeatureConfigNotifier --

AuthNotifier --> AuthNotifier ++: receives the user state
AuthNotifier -> NavigationNotifier ++: handleAuthUpdates(authState)
NavigationNotifier --> AuthNotifier --: the auth updates are handled
AuthNotifier --

FeatureConfigNotifier --> FeatureConfigNotifier ++: receives the feature config
FeatureConfigNotifier --> LoadingPage: the feature config is initialized
FeatureConfigNotifier --> AuthNotifier --: handlePublicDashboardFeatureConfigUpdates(model)
AuthNotifier++

alt publicDashboardFeature == true && authState == AuthState.logout
AuthNotifier --> AuthNotifier: signInAnonymously()
end

AuthNotifier --> LoadingPage --: the auth is initialized
LoadingPage --> NavigationNotifier ++: handleAppInitialized(true)

alt page is available for the anonymous user
NavigationNotifier --> CoolPage ++: push to the CoolPage
CoolPage --> Browser --: returns the CoolPage UI
Browser --> Bob: sees the CoolPage UI
else page is not available for the anonymous user
NavigationNotifier --> DashboardPage ++: push to the "DashboardPage"
DashboardPage --> Browser --: returns the DashboardPage UI
Browser --> Bob: sees the DashboardPage UI
end

NavigationNotifier --

@enduml
