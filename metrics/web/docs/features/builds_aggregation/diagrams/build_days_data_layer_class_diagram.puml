@startuml build_days_data_layer_class_diagram

package core.data.model {
    abstract class DataModel {
        + toJson() : Map<String, dynamic>
    }
}

package common {
    package domain.repositories {
        interface BuildDayRepository {
            + projectBuildDaysFromDateStream(String projectId, DateTime from) : Stream<List<BuildDay>>
        }
    }

    package data {
        package repositories as data_repositories {
            class FirestoreBuildDayRepository {
                - _firestore : Firestore
            }
        }

        package model {
            class BuildDayData {
                + factory fromJson(Map<String, dynamic> json) : BuildDay
                + toJson() : Map<String, dynamic>
            }
        }
    }
}

package dashboard.domain.entities {
    class BuildDay {
        + projectId : String
        + successful: int
        + failed: int
        + unknown: int
        + inProgress: int
        + totalDuration : Duration
        + day : DateTime
    }
}

FirestoreBuildDayRepository ..|> BuildDayRepository
FirestoreBuildDayRepository --> BuildDayData : uses

BuildDayData --> BuildDay : uses
BuildDayData ..|> DataModel

@enduml
