@startuml build_days_domain_layer_class_diagram

package base.domain.usecases {
    interface UseCase<Type, Params> {
        call: Type
    }
}

package common.domain.repositories {
    interface BuildDayRepository {
        + projectBuildDaysByDateRangeStream(String projectId, [DateTime from, DateTime to]) : Stream<List<BuildDay>>
    } 
}

package dashboard.domain {
    package entities {
        class BuildDay {
            + projectId : String
            + successful: int
            + failed: int
            + unknown: int
            + inProgress: int
            + totalDuration : Duration
            + day : DateTime
        }

        package metrics {
            class BuildNumberMetric {
                + numberOfBuilds : int
            }
            class BuildPerformance {
                    + date : DateTime
                    + duration: Duration
            }
            class PerformanceMetric {
                + buildsPerformance : DateTimeSet<BuildPerformance>
                + averageBuildDuration : Duration
            }
            class BuildDayProjectMetrics {
                + buildNumberMetric : BuildNumberMetric
                + performanceMetric : PerformanceMetric
            }
        }
    }

    package usecases {
        class ReceiveBuildDayProjectMetricsUpdates {
            - _repository : BuildDayRepository
            + call(BuildDayParam params) : Stream<BuildDayProjectMetrics>
        }

        package parameters {
            class BuildDayParam {
                + projectId : String
                + day : DateTime
            }
        }
    }  
}

BuildDayRepository --> BuildDay : uses
ReceiveBuildDayProjectMetricsUpdates ..|> UseCase
ReceiveBuildDayProjectMetricsUpdates --> BuildDayRepository : uses
ReceiveBuildDayProjectMetricsUpdates --> BuildDayParam : uses
ReceiveBuildDayProjectMetricsUpdates --> BuildDayProjectMetrics : uses

BuildDayProjectMetrics --> BuildNumberMetric : uses
BuildDayProjectMetrics --> PerformanceMetric : uses
PerformanceMetric --> BuildPerformance : uses

@enduml
