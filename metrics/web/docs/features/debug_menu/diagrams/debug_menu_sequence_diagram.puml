@startuml debug_menu_sequence_diagram
skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor Bob

box "presentation"
participant UI
participant LocalConfigNotifier << (C,#ADD1B2) >>
end box

box "domain"
participant OpenLocalConfigRepositoryUseCase << (C,#ADD1B2) >>
participant ReadLocalConfigUseCase << (C,#ADD1B2) >>
participant UpdateLocalConfigUseCase << (C,#ADD1B2) >>
participant CloseLocalConfigRepositoryUseCase << (C,#ADD1B2) >>
end box

box "data"
participant HiveLocalConfigRepository << (C,#ADD1B2) >>
participant LocalConfigData << (C,#ADD1B2) >>
end box

database "IndexedDB" as DB

Bob -> UI : Enters the application
activate UI

UI -> LocalConfigNotifier : initializeLocalConfig()
activate LocalConfigNotifier

LocalConfigNotifier -> OpenLocalConfigRepositoryUseCase : call()
activate OpenLocalConfigRepositoryUseCase

OpenLocalConfigRepositoryUseCase -> HiveLocalConfigRepository : open()
activate HiveLocalConfigRepository

HiveLocalConfigRepository -> DB : Open 'local_config' box
DB --> HiveLocalConfigRepository : Opened 'local_config' box
HiveLocalConfigRepository --> OpenLocalConfigRepositoryUseCase : Opened 'local_config' box
OpenLocalConfigRepositoryUseCase --> LocalConfigNotifier : Repository opened
deactivate OpenLocalConfigRepositoryUseCase

LocalConfigNotifier -> ReadLocalConfigUseCase : call()
activate ReadLocalConfigUseCase

ReadLocalConfigUseCase -> HiveLocalConfigRepository : readConfig()
HiveLocalConfigRepository -> LocalConfigData : fromJson(Map<String, dynamic> json)
activate LocalConfigData

LocalConfigData --> HiveLocalConfigRepository : LocalConfig
deactivate LocalConfigData
HiveLocalConfigRepository --> ReadLocalConfigUseCase : LocalConfig
ReadLocalConfigUseCase --> LocalConfigNotifier : LocalConfig
deactivate ReadLocalConfigUseCase

LocalConfigNotifier --> UI : Notify about new config

UI --> Bob : Enable FPS monitor

Bob -> UI : Toggles FPS monitor in Debug Menu
UI -> LocalConfigNotifier : toggleFpsMonitor(false)
LocalConfigNotifier -> LocalConfigNotifier : updates FpsMonitorLocalConfigViewModel
LocalConfigNotifier --> UI : Notifies about new config
UI --> Bob : Disable FPS monitor

LocalConfigNotifier -> UpdateLocalConfigUseCase : call(LocalConfigParam param)
activate UpdateLocalConfigUseCase
UpdateLocalConfigUseCase -> HiveLocalConfigRepository : updateConfig(Map<String, dynamic> configMap)
HiveLocalConfigRepository -> DB : Update 'local_config' box
DB --> HiveLocalConfigRepository : Updated 'local_config' box
HiveLocalConfigRepository --> UpdateLocalConfigUseCase : Updated 'local_config' box
UpdateLocalConfigUseCase --> LocalConfigNotifier : Updated 'local_config' box
deactivate UpdateLocalConfigUseCase


Bob -> UI : Exits the application
UI -> LocalConfigNotifier : Notifies about application's finish

LocalConfigNotifier -> CloseLocalConfigRepositoryUseCase : call()
activate CloseLocalConfigRepositoryUseCase
CloseLocalConfigRepositoryUseCase -> HiveLocalConfigRepository : Close 'local_config' box
HiveLocalConfigRepository -> DB : Close 'local_config' box
DB --> HiveLocalConfigRepository : Closed 'local_config' box
HiveLocalConfigRepository --> CloseLocalConfigRepositoryUseCase : Closed 'local_config' box
deactivate HiveLocalConfigRepository

CloseLocalConfigRepositoryUseCase --> LocalConfigNotifier : Closed 'local_config' box
deactivate CloseLocalConfigRepositoryUseCase

LocalConfigNotifier --> LocalConfigNotifier : dispose()

deactivate UI
deactivate LocalConfigNotifier



@enduml

