@startuml debug_menu_read_config_sequence_diagram

skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor Bob

box "presentation"
    participant UI
    participant DebugMenuNotifier << (C,#ADD1B2) >>
    participant FeatureConfigNotifier << (C,#ADD1B2) >>
end box

box "domain"
    participant ReadLocalConfigUseCase << (C,#ADD1B2) >>
end box

box "data"
    participant HiveLocalConfigRepository << (C,#ADD1B2) >>
    participant LocalConfigData << (C,#ADD1B2) >>
end box

database "IndexedDB" as DB

Bob -> UI : Enters the application
UI -> FeatureConfigNotifier : initializeFeatureConfig()
activate FeatureConfigNotifier

FeatureConfigNotifier --> UI : debugMenuFeatureConfig
deactivate FeatureConfigNotifier

alt debugMenuFeatureConfig.isEnabled
    UI -> DebugMenuNotifier : initializeLocalConfig()
    activate DebugMenuNotifier
    DebugMenuNotifier -> ReadLocalConfigUseCase : call()
    activate ReadLocalConfigUseCase

    ReadLocalConfigUseCase -> HiveLocalConfigRepository : readConfig()
    activate HiveLocalConfigRepository

    HiveLocalConfigRepository -> DB : Read 'local_config' box
    DB --> HiveLocalConfigRepository : localConfigJson

    HiveLocalConfigRepository -> LocalConfigData : .fromJson(localConfigJson)
    activate LocalConfigData

    return localConfig
    return localConfig
    return localConfig
    return "Notify about new localConfig"

else !debugMenuFeatureConfig.isEnabled
    UI -> DebugMenuNotifier : initializeDefaults()
    activate DebugMenuNotifier
    return "Notify about new localConfig"
end

UI --> Bob : Dismiss the Loading screen

@enduml