@startuml sync_algorithm_activity_diagram
'https://plantuml.com/activity-diagram-beta
skinparam ConditionEndStyle hline

|Re-sync In-Progress Builds|
split
-[hidden]->

    start
    :CiIntegration.sync();
    :destination.fetchBuildsWithStatus(BuildStatus.inProgress) -> **buildsInProgress**;
    note left
        fetch //builds// where
        //state// is //in progress//
    end note

    repeat
        :source.fetchBuild() -> **build**;

        if (should force timeout) then (yes) 
            :force time out -> **newBuild**;
            note left
                controlled by CLI option 
                //--in-progress-timeout//
                defaults to //120 minutes//
            end note
        else (no)
            :process **build** -> **newBuild**;
        endif

        :**result**.add(**newBuild**);
    repeatwhile (for each in **buildsInProgress**)

    :fetch coverage for builds if necessary;
    :destination.updateBuilds(**result**);
    note left
        for each //build// in //result//
        set //new data//
    end note

    #yellow:(1)
    detach

|Sync Builds|
split again
-[hidden]->

    #yellow:(1)

    :destination.fetchLastBuild() -> **lastBuild**;

    if (**lastBuild** is **null**) then (yes)
        :source.fetchBuilds() -> **result**;
    else (no)
        :source.fetchBuildsAfter(**lastBuild**) -> **result**;
    endif

    :fetch coverage for builds if necessary;

    :destination.addBuilds(**result**);
    note right
        Builds possible states:
        - **in progress**
        - successful
        - failed
        - unknown
    end note

stop
end split

@enduml
