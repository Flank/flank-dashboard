@startuml ci_integrations_config_validator_class_diagram

    package integration {
        package interface.base {
            package party {
                abstract class IntegrationParty<T extends Config, K extends IntegrationClient, V extends ConfigValidator> {
                    + clientFactory: IntegrationClientFactory<T, K>
                    + configParser: ConfigParser<T>
                    + configValidatorFactory: ConfigValidatorFactory<V>
                }
            }

            package validator {
                abstract class ConfigValidator<T extends Config> {
                    - validatorClient: ConfigValidatorClient
                    - errorBuffer: StringBuffer
                    + Future<void> call(T config)
                }

                package client {
                    abstract class ConfigValidatorClient {}
                }

                package factory {
                    abstract class ConfigValidatorFactory<V extends ConfigValidator> {
                        + V create()
                    }
                }
            }

            package config {
                abstract class Config {}
            }
        }

        package exception {
            class ConfigValidatorException {
                + message: String
            }
        }

    }

    package destination.firestore.validator {
        class FirestoreConfigValidator {}
    }

    package source {
        package buildkite.validator {
            class BuildkiteConfigValidator {}
        }

        package github_actions.validator {
            class GithubActionsConfigValidator {}
        }

        package jenkins.validator {
            class JenkinsConfigValidator {}
        }
    }

    package cli.logger {
        class Logger {
            # void logError()
            # void logMessage()
            # void logInfo()
        }
    }

    IntegrationParty --> ConfigValidatorFactory : uses

    ConfigValidatorFactory --> ConfigValidator : uses

    ConfigValidator --> ConfigValidatorClient : uses
    ConfigValidator --> ConfigValidatorException : uses
    ConfigValidator --> Logger : uses
    ConfigValidator --> Config : uses

    FirestoreConfigValidator ..|> ConfigValidator
    BuildkiteConfigValidator ..|> ConfigValidator
    GithubActionsConfigValidator ..|> ConfigValidator
    JenkinsConfigValidator ..|> ConfigValidator

@enduml
