@startuml ci_integrations_config_validator_class_diagram

    package integration {
        package interface.base {
            package party {
                abstract class IntegrationParty<T extends Config, K extends IntegrationClient, V extends ConfigValidator> {
                    + clientFactory: IntegrationClientFactory<T, K>
                    + configParser: ConfigParser<T>
                    + configValidatorFactory: ConfigValidatorFactory<V>
                }
            }

            package client {
                abstract class ConfigValidatorClient {}
            }

            package config {
                package model {
                    abstract class Config {}
                }

                package validator {
                    abstract class ConfigValidator<T extends Config> {
                        - validatorClient: ConfigValidatorClient
                        - errorBuffer: StringBuffer
                        + Future<void> validate(T config)
                    }
                }

                package validator_factory {
                    abstract class ConfigValidatorFactory<V extends ConfigValidator> {
                        + V create()
                    }
                }
            }
        }

        package exception {
            class ConfigValidationException {
                + message: String
                + String toString()
            }
        }

    }

    package destination.cool_integration {
        package config as cool_integration_config {
            package validator as cool_integration_validator {
                class CoolIntegrationConfigValidator {}
            }

            package validator_factory as cool_integration_validator_validator_factory {
                class CoolIntegrationConfigValidatorFactory {}
            }
        }

        package client as cool_integration_client {
            class CoolIntegrationConfigValidatorClient {}
        }
    }

    package cli.logger {
        class Logger {
            # void logError()
            # void logMessage()
            # void logInfo()
        }
    }

    IntegrationParty --> ConfigValidatorFactory : uses

    ConfigValidatorFactory --> ConfigValidator : uses

    ConfigValidator --> ConfigValidatorClient : uses
    ConfigValidator --> ConfigValidationException : throws
    ConfigValidator --> Logger : uses
    ConfigValidator --> Config : uses

    CoolIntegrationConfigValidator ..|> ConfigValidator
    CoolIntegrationConfigValidator --> CoolIntegrationConfigValidatorClient : uses
    CoolIntegrationConfigValidatorFactory ..|> ConfigValidatorFactory
    CoolIntegrationConfigValidatorFactory --> CoolIntegrationConfigValidator : creates
    CoolIntegrationConfigValidatorFactory --> CoolIntegrationConfigValidatorClient : creates
    CoolIntegrationConfigValidatorClient ..|> ConfigValidatorClient

@enduml
