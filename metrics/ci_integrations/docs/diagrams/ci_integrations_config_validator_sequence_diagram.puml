@startuml ci_integrations_config_validator_sequence_diagram

skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor Bob

participant "CI Integrations"
participant CiIntegrationsRunner
participant ValidateCommand
participant CoolIntegrationConfigValidatorFactory
participant CoolIntegrationConfigValidator
participant CoolIntegrationValidationResultBuilder
participant CoolIntegrationValidationDelegate
participant CoolIntegrationClient

Bob -> "CI Integrations" : runs validate
activate "CI Integrations"

"CI Integrations" -> CiIntegrationsRunner: run(List<String> arguments)
deactivate "CI Integrations"
activate CiIntegrationsRunner

CiIntegrationsRunner -> ValidateCommand: run()
deactivate CiIntegrationsRunner
activate ValidateCommand

ValidateCommand -> ValidateCommand : creates source and destination parties
ValidateCommand -> ValidateCommand : parses source and destination configs

ValidateCommand -> CoolIntegrationConfigValidatorFactory : create()
activate CoolIntegrationConfigValidatorFactory

CoolIntegrationConfigValidatorFactory --> ValidateCommand : configValidator
deactivate CoolIntegrationConfigValidatorFactory

ValidateCommand -> CoolIntegrationConfigValidator : validate(config)
activate CoolIntegrationConfigValidator

CoolIntegrationConfigValidator -> CoolIntegrationValidationDelegate : validateAuth(auth)
activate CoolIntegrationValidationDelegate

CoolIntegrationValidationDelegate -> CoolIntegrationClient : authenticate(auth)
activate  CoolIntegrationClient

alt auth is valid

    CoolIntegrationClient --> CoolIntegrationValidationDelegate : InteractionResult.success
    CoolIntegrationValidationDelegate -> CoolIntegrationValidationDelegate : performs additional validation
    CoolIntegrationValidationDelegate --> CoolIntegrationConfigValidator : InteractionResult.success
    CoolIntegrationConfigValidator -> CoolIntegrationValidationResultBuilder : setAuthResult(FieldValidationResult.success('auth'))
    activate CoolIntegrationValidationResultBuilder


else auth is not valid

    CoolIntegrationClient --> CoolIntegrationValidationDelegate : InteractionResult.error
    CoolIntegrationValidationDelegate --> CoolIntegrationConfigValidator : InteractionResult.error
    CoolIntegrationConfigValidator -> CoolIntegrationValidationResultBuilder : setAuthResult(FieldValidationResult.failure, additionalContext)
    CoolIntegrationConfigValidator -> CoolIntegrationValidationResultBuilder : setInterruptReason('The auth is not valid. Can't continue the validation.')
    CoolIntegrationConfigValidator -> CoolIntegrationValidationResultBuilder : build()
    CoolIntegrationValidationResultBuilder --> CoolIntegrationConfigValidator : validationResult

    CoolIntegrationConfigValidator --> ValidateCommand : validationResult
    ValidateCommand --> Bob : provides detailed conclusion on config validation

end


CoolIntegrationConfigValidator -> CoolIntegrationValidationDelegate : validateAnotherField(anotherField)
CoolIntegrationValidationDelegate -> CoolIntegrationClient : anotherMethod(anotherField)

CoolIntegrationClient --> CoolIntegrationValidationDelegate : InteractionResult.success
deactivate CoolIntegrationClient

CoolIntegrationValidationDelegate -> CoolIntegrationValidationDelegate : performs additional validation
CoolIntegrationValidationDelegate --> CoolIntegrationConfigValidator : InteractionResult.success
deactivate CoolIntegrationValidationDelegate

CoolIntegrationConfigValidator -> CoolIntegrationValidationResultBuilder : setAnotherFieldResult(FieldValidationResult.success('anotherField'))
CoolIntegrationConfigValidator -> CoolIntegrationValidationResultBuilder : build()
CoolIntegrationValidationResultBuilder --> CoolIntegrationConfigValidator : validationResult

deactivate CoolIntegrationValidationResultBuilder

CoolIntegrationConfigValidator --> ValidateCommand : validationResult

deactivate CoolIntegrationConfigValidator

ValidateCommand --> Bob : provides detailed conclusion on config validation

deactivate ValidateCommand

@enduml
