@startuml ci_integrations_config_validator_sequence_diagram

skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor Bob

participant "CI Integrations"
participant CiIntegrationsRunner
participant ValidateCommand
participant CoolIntegrationConfigValidatorFactory
participant CoolIntegrationConfigValidator
participant CoolIntegrationValidationDelegate
participant CoolIntegrationClient

Bob -> "CI Integrations" : runs validate
activate "CI Integrations"

"CI Integrations" -> CiIntegrationsRunner: run(List<String> arguments)
deactivate "CI Integrations"
activate CiIntegrationsRunner

CiIntegrationsRunner -> ValidateCommand: run()
deactivate CiIntegrationsRunner
activate ValidateCommand

ValidateCommand -> ValidateCommand : creates source and destination parties
ValidateCommand -> ValidateCommand : parses source and destination configs

ValidateCommand -> CoolIntegrationConfigValidatorFactory : create()
activate CoolIntegrationConfigValidatorFactory

CoolIntegrationConfigValidatorFactory --> ValidateCommand : configValidator
deactivate CoolIntegrationConfigValidatorFactory

ValidateCommand -> CoolIntegrationConfigValidator : validate(config)
activate CoolIntegrationConfigValidator

CoolIntegrationConfigValidator -> CoolIntegrationValidationDelegate : validateAuth(auth)
activate CoolIntegrationValidationDelegate

CoolIntegrationValidationDelegate -> CoolIntegrationClient : authenticate(auth)
activate  CoolIntegrationClient

alt auth is valid

    CoolIntegrationClient --> CoolIntegrationValidationDelegate : InteractionResult.success
    CoolIntegrationValidationDelegate -> CoolIntegrationValidationDelegate : performs additional validation
    CoolIntegrationValidationDelegate --> CoolIntegrationConfigValidator : InteractionResult.success
    CoolIntegrationConfigValidator -> CoolIntegrationConfigValidator : validationResult.add(ConfigFieldValidationResult.success)


else auth is not valid

    CoolIntegrationClient --> CoolIntegrationValidationDelegate : InteractionResult.error
    CoolIntegrationValidationDelegate --> CoolIntegrationConfigValidator : InteractionResult.error
    CoolIntegrationConfigValidator  -> CoolIntegrationConfigValidator : validationResult.add(ConfigValidationResult.failure)

end


alt another field can be validated

    CoolIntegrationConfigValidator -> CoolIntegrationValidationDelegate : validateAnotherField(anotherField)
    CoolIntegrationValidationDelegate -> CoolIntegrationClient : anotherMethod(anotherField)

    CoolIntegrationClient --> CoolIntegrationValidationDelegate : InteractionResult.success
    deactivate CoolIntegrationClient

    CoolIntegrationValidationDelegate -> CoolIntegrationValidationDelegate : performs additional validation
    CoolIntegrationValidationDelegate --> CoolIntegrationConfigValidator : InteractionResult.success
    deactivate CoolIntegrationValidationDelegate

    CoolIntegrationConfigValidator -> CoolIntegrationConfigValidator : validationResult.add(ConfigFieldValidationResult.success)

else another field cannot be validated

    CoolIntegrationConfigValidator -> CoolIntegrationConfigValidator : validationResult.add(ConfigFieldValidationResult.unknown)

end

deactivate CoolIntegrationConfigValidator

ConfigValidator --> ValidateCommand : validationResult
ValidateCommand --> Bob : provides detailed conclusion on config

@enduml
