@startuml ci_integrations_config_validator_sequence_diagram

skinparam ParticipantPadding 20
skinparam BoxPadding 10

actor Bob

participant "CI Integrations"
participant CiIntegrationsRunner
participant SyncCommand
participant ConfigValidatorFactory
participant ConfigValidator
participant ValidationDelegate
participant CoolIntegrationClient

Bob -> "CI Integrations" : runs sync
activate "CI Integrations"

"CI Integrations" -> CiIntegrationsRunner: run(List<String> arguments)
deactivate "CI Integrations"
activate CiIntegrationsRunner

CiIntegrationsRunner -> SyncCommand: run()
deactivate CiIntegrationsRunner
activate SyncCommand

SyncCommand -> SyncCommand : creates source and destination parties
SyncCommand -> SyncCommand : parses source and destination configs

SyncCommand -> ConfigValidatorFactory : create()
activate ConfigValidatorFactory

ConfigValidatorFactory --> SyncCommand : configValidator
deactivate ConfigValidatorFactory

SyncCommand -> ConfigValidator : validate(config)
activate ConfigValidator

alt config is valid

    ConfigValidator -> ValidationDelegate : validateAuth()
    activate ValidationDelegate

    ValidationDelegate -> CoolIntegrationClient : authenticate()
    activate  CoolIntegrationClient
    CoolIntegrationClient --> ValidationDelegate : InteractionResult.success
    ValidationDelegate --> ConfigValidator : InteractionResult.success

    ConfigValidator -> ValidationDelegate : validateAnotherField()
    ValidationDelegate -> CoolIntegrationClient : anotherMethod()
    CoolIntegrationClient --> ValidationDelegate : InteractionResult.success
    ValidationDelegate --> ConfigValidator : InteractionResult.success

    ConfigValidator --> SyncCommand : config is valid
    SyncCommand -> SyncCommand : continues the sync command
    SyncCommand --> Bob : sync was successful

else config is not valid

    ConfigValidator -> ValidationDelegate : validateAuth()

    ValidationDelegate -> CoolIntegrationClient : authenticate()
    CoolIntegrationClient --> ValidationDelegate : InteractionResult.success
    ValidationDelegate --> ConfigValidator : InteractionResult.success

    ConfigValidator -> ValidationDelegate : validateAnotherField()
    ValidationDelegate -> CoolIntegrationClient : anotherMethod()
    CoolIntegrationClient --> ValidationDelegate : InteractionResult.error
    deactivate CoolIntegrationClient


    ValidationDelegate --> ConfigValidator : InteractionResult.error
    deactivate ValidationDelegate

    ConfigValidator -> ConfigValidator : adds error message to error buffer

    ConfigValidator --> SyncCommand : throw ""ConfigValidationException(message)""
    deactivate ConfigValidator

    SyncCommand --> Bob : sync failed
    deactivate SyncCommand

end

deactivate ValidationDelegate
deactivate ConfigValidator

deactivate "CI Integrations"
deactivate SyncCommand

@enduml
