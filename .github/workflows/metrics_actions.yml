name: Metrics Actions

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  changed_projects:
    name: Get changed projects
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.changed_projects.outputs.web }}
      ci_integrations: ${{ steps.changed_projects.outputs.ci_integrations }}
      coverage_converter: ${{ steps.changed_projects.outputs.coverage_converter }}
      firebase: ${{ steps.changed_projects.outputs.firebase }}
      core: ${{ steps.changed_projects.outputs.core }}
    steps:
      - name: Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"
      - name: Check changed projects
        id: changed_projects
        run: |
          CHANGED="${{ steps.changed_files.outputs.all }}"
          WEB="metrics/web"
          INTEGRATIONS="metrics/ci_integrations"
          COVERAGE="metrics/coverage_converter"
          FIREBASE="metrics/firebase"
          CORE="metrics/core"
          if [[ "$CHANGED" == *"$WEB"* ]]; then
            echo "::set-output name=web::true"
          else
            echo "::set-output name=web::false"
          fi
          if [[ "$CHANGED" == *"$INTEGRATIONS"* ]]; then
            echo "::set-output name=ci_integrations::true"
          else
            echo "::set-output name=ci_integrations::false"
          fi
          if [[ "$CHANGED" == *"$COVERAGE"* ]]; then
            echo "::set-output name=coverage_converter::true"
          else
            echo "::set-output name=coverage_converter::false"
          fi
          if [[ "$CHANGED" == *"$FIREBASE"* ]]; then
            echo "::set-output name=firebase::true"
          else
            echo "::set-output name=firebase::false"
          fi
          if [[ "$CHANGED" == *"$CORE"* ]]; then
            echo "::set-output name=core::true"
          else
            echo "::set-output name=core::false"
          fi
  core-actions:
    name: Core Actions
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [ changed_projects ]
    if: needs.changed_projects.outputs.core == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.12.0-133.2.beta

      - name: Get Dependencies
        run: pub get
        working-directory: metrics/core/

      - name: Run Analyzer
        run: dartanalyzer . --fatal-infos --fatal-warnings
        working-directory: metrics/core/

      - name: Run Tests
        run: pub run test
        working-directory: metrics/core/

  metrics-web-actions:
    name: Metrics Web Actions
    runs-on: macOS-latest
    needs: [changed_projects]
    if: needs.changed_projects.outputs.web == 'true' || needs.changed_projects.outputs.core == 'true'
    timeout-minutes: 60
    env:
      WEB_APP_USER_EMAIL: ${{ secrets.WEB_APP_USER_EMAIL }}
      WEB_APP_USER_PASSWORD: ${{ secrets.WEB_APP_USER_PASSWORD }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      PROJECT_PATH: metrics/web/
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: subosito/flutter-action@v1
        with:
          channel: beta
          flutter-version: 1.25.0-8.2.pre

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.12.0-133.2.beta

      - name: Configure Flutter
        run: flutter config --enable-web && flutter doctor
        working-directory: metrics/web/

      - name: Get dependencies
        run: flutter pub get
        working-directory: metrics/web/

      - name: Flutter analyze
        run: flutter analyze
        working-directory: metrics/web/

      - name: Flutter test
        run: flutter test
        working-directory: metrics/web/

      - name: Flutter driver test
        run: dart test_driver/main.dart --no-verbose --store-logs-to=build/logs --email=$WEB_APP_USER_EMAIL --password=$WEB_APP_USER_PASSWORD
        working-directory: metrics/web/

  firebase-actions:
    name: Firebase Actions
    runs-on: macOS-latest
    timeout-minutes: 60
    needs: [changed_projects]
    if: needs.changed_projects.outputs.firebase == 'true'
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      PROJECT_PATH: metrics/firebase/
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: NPM install
        run: npm install
        working-directory: metrics/firebase/

      - name: Run Firestore security rules tests
        run: firebase emulators:exec --only firestore "npm run test"
        working-directory: metrics/firebase/

  coverage-converter-actions:
    name: Coverage Converter Actions
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [changed_projects]
    if: needs.changed_projects.outputs.coverage_converter == 'true' || needs.changed_projects.outputs.core == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.12.0-133.2.beta

      - name: Get Dependencies
        run: pub get
        working-directory: metrics/coverage_converter/

      - name: Run Analyzer
        run: dartanalyzer . --fatal-infos --fatal-warnings
        working-directory: metrics/coverage_converter/

      - name: Run Tests
        run: pub run test
        working-directory: metrics/coverage_converter/

  ci_integrations-actions:
    name: CI Integrations Actions
    runs-on: macOS-latest
    timeout-minutes: 60
    needs: [changed_projects]
    if: needs.changed_projects.outputs.ci_integrations == 'true' || needs.changed_projects.outputs.core == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.12.0-133.2.beta

      - name: Get dependencies
        run: pub get
        working-directory: metrics/ci_integrations/

      - name: Dart analyze
        run: dartanalyzer . --fatal-infos --fatal-warnings
        working-directory: metrics/ci_integrations/

      - name: Run tests
        run: pub run test_coverage --print-test-output --no-badge
        working-directory: metrics/ci_integrations/

  check-links-actions:
    name: Check Links Actions
    runs-on: macOS-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.12.0-133.2.beta

      - name: Get dependencies
        run: pub get
        working-directory: scripts/links_checker/

      - name: Get all changed files
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: Check links are pointing to master
        run: dart scripts/links_checker/bin/main.dart validate --paths='${{ steps.files.outputs.added_modified }} ${{ steps.files.outputs.renamed}}'
