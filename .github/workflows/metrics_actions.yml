name: Metrics Actions

on:
  pull_request:
    types: [ opened, edited, synchronize ]

jobs:
  changed_projects:
    name: Get changed projects
    runs-on: ubuntu-latest
    outputs:
      is_metrics_web_changed: ${{ steps.changed_projects.outputs.is_metrics_web_changed }}
      is_ci_integrations_changed: ${{ steps.changed_projects.outputs.is_ci_integrations_changed }}
      is_coverage_converter_changed: ${{ steps.changed_projects.outputs.is_coverage_converter_changed }}
      is_firebase_changed: ${{ steps.changed_projects.outputs.is_firebase_changed }}
      is_core_changed: ${{ steps.changed_projects.outputs.is_core_changed }}
    steps:
      - name: Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'space-delimited'
      - name: Check changed projects
        id: changed_projects
        run: |
          CHANGED="${{ steps.changed_files.outputs.all }}"
          WEB="metrics/web"
          INTEGRATIONS="metrics/ci_integrations"
          COVERAGE="metrics/coverage_converter"
          FIREBASE="metrics/firebase"
          CORE="metrics/core"
          if [[ "$CHANGED" == *"$WEB"* ]]; then
            echo "::set-output name=is_metrics_web_changed::true"
          else
            echo "::set-output name=is_metrics_web_changed::false"
          fi
          if [[ "$CHANGED" == *"$INTEGRATIONS"* ]]; then
            echo "::set-output name=is_ci_integrations_changed::true"
          else
            echo "::set-output name=is_ci_integrations_changed::false"
          fi
          if [[ "$CHANGED" == *"$COVERAGE"* ]]; then
            echo "::set-output name=is_coverage_converter_changed::true"
          else
            echo "::set-output name=is_coverage_converter_changed::false"
          fi
          if [[ "$CHANGED" == *"$FIREBASE"* ]]; then
            echo "::set-output name=is_firebase_changed::true"
          else
            echo "::set-output name=is_firebase_changed::false"
          fi
          if [[ "$CHANGED" == *"$CORE"* ]]; then
            echo "::set-output name=is_core_changed::true"
          else
            echo "::set-output name=is_core_changed::false"
          fi
  metrics-web-actions:
    name: Metrics Web Actions
    runs-on: macOS-latest
    needs: [ changed_projects ]
    if: needs.changed_projects.outputs.is_metrics_web_changed == 'true' || needs.changed_projects.outputs.is_core_changed == 'true'
    timeout-minutes: 60
    env:
      WEB_APP_USER_EMAIL: ${{ secrets.WEB_APP_USER_EMAIL }}
      WEB_APP_USER_PASSWORD: ${{ secrets.WEB_APP_USER_PASSWORD }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      PROJECT_PATH: metrics/web/

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
          flutter-version: '1.22.0-12.1.pre'

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.10.0-110.5.beta

      - name: Configure Flutter
        run: flutter config --enable-web && flutter doctor
        working-directory: metrics/web/

      - name: Get dependencies
        run: flutter pub get
        working-directory: metrics/web/

      - name: Flutter analyze
        run: flutter analyze
        working-directory: metrics/web/

      - name: Flutter test
        run: flutter test
        working-directory: metrics/web/

      - name: Flutter driver test
        run: dart test_driver/main.dart --no-verbose --store-logs-to=build/logs --email=$WEB_APP_USER_EMAIL --password=$WEB_APP_USER_PASSWORD
        working-directory: metrics/web/

  firebase-actions:
    name: Firebase Actions
    runs-on: macOS-latest
    timeout-minutes: 60
    needs: [ changed_projects ]
    if: needs.changed_projects.outputs.is_firebase_changed == 'true'
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      PROJECT_PATH: metrics/firebase/

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: NPM install
        run: npm install
        working-directory: metrics/firebase/

      - name: Run Firestore security rules tests
        run: firebase emulators:exec --only firestore "npm run test"
        working-directory: metrics/firebase/

  coverage-converter-actions:
    name: Coverage Converter Actions
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [ changed_projects ]
    if: needs.changed_projects.outputs.is_coverage_converter_changed == 'true' || needs.changed_projects.outputs.is_core_changed == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.10.0-110.5.beta

      - name: Get Dependencies
        run: pub get
        working-directory: metrics/coverage_converter/

      - name: Run Analyzer
        run: dartanalyzer . --fatal-infos --fatal-warnings
        working-directory: metrics/coverage_converter/

      - name: Run Tests
        run: pub run test
        working-directory: metrics/coverage_converter/

  ci_integrations-actions:
    name: CI Integrations Actions
    runs-on: macOS-latest
    timeout-minutes: 60
    needs: [ changed_projects ]
    if: needs.changed_projects.outputs.is_ci_integrations_changed == 'true' || needs.changed_projects.outputs.is_core_changed == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.10.0-110.5.beta

      - name: Get dependencies
        run: pub get
        working-directory: metrics/ci_integrations/

      - name: Dart analyze
        run: dartanalyzer . --fatal-infos --fatal-warnings
        working-directory: metrics/ci_integrations/

      - name: Run tests
        run: bash test.sh
        working-directory: metrics/ci_integrations/
