name: Metrics Web Application Actions

on:
  push:
    branches: master
    paths:
      - metrics/web/**
      - metrics/core/**

jobs:
  metrics-actions:
    name: Metrics actions
    runs-on: macOS-latest
    timeout-minutes: 60
    env:
      WEB_APP_USER_EMAIL: ${{ secrets.WEB_APP_USER_EMAIL }}
      WEB_APP_USER_PASSWORD: ${{ secrets.WEB_APP_USER_PASSWORD }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_RELEASE: ${{ github.run_number }}
      SENTRY_RELEASE_AUTORENDERER: ${{ github.run_number }}_autorenderer
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_TOKEN_PRODUCTION: ${{ secrets.FIREBASE_TOKEN_PRODUCTION }}
      GOOGLE_SIGN_IN_CLIENT_ID: ${{ secrets.GOOGLE_SIGN_IN_CLIENT_ID }}
      GOOGLE_SIGN_IN_CLIENT_ID_PRODUCTION: ${{ secrets.GOOGLE_SIGN_IN_CLIENT_ID_PRODUCTION }}
      PRODUCTION_PROJECT_ID: ${{ secrets.PRODUCTION_PROJECT_ID }}
      PRODUCTION_HOSTING_NAME: ${{ secrets.PRODUCTION_HOSTING_NAME }}
      PROJECT_PATH: metrics/web/
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: subosito/flutter-action@v1
        with:
          channel: beta
          flutter-version: 1.25.0-8.2.pre

      - uses: cedx/setup-dart@v2
        with:
          release-channel: beta
          version: 2.12.0-133.2.beta

      - name: Configure Flutter
        run: flutter config --enable-web && flutter doctor
        working-directory: metrics/web/

      - name: Get dependencies
        run: flutter pub get
        working-directory: metrics/web/

      - name: Flutter analyze
        run: flutter analyze
        working-directory: metrics/web/

      - name: Flutter test
        run: flutter test --coverage --coverage-path build/coverage.info
        working-directory: metrics/web/

      - name: Flutter driver test
        run: dart test_driver/main.dart --no-verbose --store-logs-to=build/logs --email=$WEB_APP_USER_EMAIL --password=$WEB_APP_USER_PASSWORD
        working-directory: metrics/web/

      - name: Download coverage tool
        run: |
          curl -o coverage -k https://github.com/platform-platform/monorepo/releases/download/coverage-converter-snapshot/coverage_converter_macos -L
          chmod a+x coverage
        working-directory: metrics/web/

      - name: Convert coverage report
        run: ./coverage lcov -i build/coverage.info -o coverage-summary.json
        working-directory: metrics/web/

      - name: Export coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage_report
          path: metrics/web/coverage-summary.json
          if-no-files-found: error

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Install Sentry CLI
        run: brew install getsentry/tools/sentry-cli

      - name: Build release app
        run: flutter clean && flutter build web --release --source-maps
        working-directory: metrics/web/

      - name: Prepare metrics config for dev environment
        run: |
          export SENTRY_ENVIRONMENT="development"
          : > build/web/metrics_config.js
          eval "echo \"$(sed 's/"/\\"/g' web/metrics_config.js)\"" >> build/web/metrics_config.js
        working-directory: metrics/web/

      - name: Update Source Maps for HTML app version
        run: |
          sentry-cli releases new $SENTRY_RELEASE
          sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps . --ext dart --rewrite
          cd ./build/web/
          sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps . --ext map --ext js --rewrite
          sentry-cli releases finalize $SENTRY_RELEASE
        working-directory: metrics/web/

      - name: Deploy HTML version to Firebase
        run: firebase use default && firebase deploy --only hosting:metrics-d9c67
        working-directory: metrics/web/

      - name: Switch to Flutter latest master version
        run: flutter channel master && flutter upgrade
        working-directory: metrics/web/

      - name: Build release app using auto renderer
        run: flutter clean && flutter build web --release --source-maps --dart-define=FLUTTER_WEB_AUTO_DETECT=true
        working-directory: metrics/web/

      - name: Prepare metrics config for dev skia environment
        env:
          SENTRY_RELEASE: ${{ env.SENTRY_RELEASE_AUTORENDERER }}
        run: |
          export SENTRY_ENVIRONMENT="development-skia"
          : > build/web/metrics_config.js
          eval "echo \"$(sed 's/"/\\"/g' web/metrics_config.js)\"" >> build/web/metrics_config.js
        working-directory: metrics/web/

      - name: Update Source Maps for auto renderer app version
        run: |
          sentry-cli releases new $SENTRY_RELEASE_AUTORENDERER
          sentry-cli releases files $SENTRY_RELEASE_AUTORENDERER upload-sourcemaps . --ext dart --rewrite
          cd ./build/web/
          sentry-cli releases files $SENTRY_RELEASE_AUTORENDERER upload-sourcemaps . --ext map --ext js --rewrite
          sentry-cli releases finalize $SENTRY_RELEASE_AUTORENDERER
        working-directory: metrics/web/

      - name: Deploy auto renderer version to Firebase
        run: firebase use default && firebase deploy --only hosting:metrics-skia
        working-directory: metrics/web/

      - name: Prepare metrics config for production environment
        env:
          SENTRY_RELEASE: ${{ env.SENTRY_RELEASE_AUTORENDERER }}
          GOOGLE_SIGN_IN_CLIENT_ID: ${{ env.GOOGLE_SIGN_IN_CLIENT_ID_PRODUCTION }}
        run: |
          export SENTRY_ENVIRONMENT="production-skia"
          : > build/web/metrics_config.js
          eval "echo \"$(sed 's/"/\\"/g' web/metrics_config.js)\"" > build/web/metrics_config.js
        working-directory: metrics/web/

      - name: Deploy auto renderer version to production Firebase
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN_PRODUCTION }}
        run: |
          firebase use --add $PRODUCTION_PROJECT_ID production
          firebase target:apply hosting metrics-skia $PRODUCTION_HOSTING_NAME
          firebase deploy --only hosting:metrics-skia
        working-directory: metrics/web/

  notify-actions:
    name: Notify about building finished
    runs-on: macos-latest
    needs: [ metrics-actions ]
    if: "always()"
    steps:
      - name: Notify about building the Web
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          repository: platform-platform/monorepo
          event-type: building_project
          client-payload: '{"building_metrics_web": "true"}'
      - name: Send notification to Slack
        if: needs.metrics-actions.result == 'failure' || needs.metrics-actions.result == 'cancelled'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          repository: ${{ github.repository }}
          event-type: send_slack_notification
          client-payload: '{"workflow_name": "${{ github.workflow }}", "run_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"}'
